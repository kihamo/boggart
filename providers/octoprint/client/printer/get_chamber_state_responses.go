// Code generated by go-swagger; DO NOT EDIT.

package printer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kihamo/boggart/providers/octoprint/models"
)

// GetChamberStateReader is a Reader for the GetChamberState structure.
type GetChamberStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChamberStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChamberStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewGetChamberStateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/printer/chamber] getChamberState", response, response.Code())
	}
}

// NewGetChamberStateOK creates a GetChamberStateOK with default headers values
func NewGetChamberStateOK() *GetChamberStateOK {
	return &GetChamberStateOK{}
}

/*
GetChamberStateOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetChamberStateOK struct {
	Payload *models.ChamberState
}

// IsSuccess returns true when this get chamber state o k response has a 2xx status code
func (o *GetChamberStateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chamber state o k response has a 3xx status code
func (o *GetChamberStateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chamber state o k response has a 4xx status code
func (o *GetChamberStateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chamber state o k response has a 5xx status code
func (o *GetChamberStateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chamber state o k response a status code equal to that given
func (o *GetChamberStateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get chamber state o k response
func (o *GetChamberStateOK) Code() int {
	return 200
}

func (o *GetChamberStateOK) Error() string {
	return fmt.Sprintf("[GET /api/printer/chamber][%d] getChamberStateOK  %+v", 200, o.Payload)
}

func (o *GetChamberStateOK) String() string {
	return fmt.Sprintf("[GET /api/printer/chamber][%d] getChamberStateOK  %+v", 200, o.Payload)
}

func (o *GetChamberStateOK) GetPayload() *models.ChamberState {
	return o.Payload
}

func (o *GetChamberStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChamberState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChamberStateConflict creates a GetChamberStateConflict with default headers values
func NewGetChamberStateConflict() *GetChamberStateConflict {
	return &GetChamberStateConflict{}
}

/*
GetChamberStateConflict describes a response with status code 409, with default header values.

If the printer is not operational
*/
type GetChamberStateConflict struct {
}

// IsSuccess returns true when this get chamber state conflict response has a 2xx status code
func (o *GetChamberStateConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chamber state conflict response has a 3xx status code
func (o *GetChamberStateConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chamber state conflict response has a 4xx status code
func (o *GetChamberStateConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chamber state conflict response has a 5xx status code
func (o *GetChamberStateConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get chamber state conflict response a status code equal to that given
func (o *GetChamberStateConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get chamber state conflict response
func (o *GetChamberStateConflict) Code() int {
	return 409
}

func (o *GetChamberStateConflict) Error() string {
	return fmt.Sprintf("[GET /api/printer/chamber][%d] getChamberStateConflict ", 409)
}

func (o *GetChamberStateConflict) String() string {
	return fmt.Sprintf("[GET /api/printer/chamber][%d] getChamberStateConflict ", 409)
}

func (o *GetChamberStateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
