// Code generated by go-swagger; DO NOT EDIT.

package printer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kihamo/boggart/providers/octoprint/models"
)

// GetPrinterStateReader is a Reader for the GetPrinterState structure.
type GetPrinterStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPrinterStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPrinterStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewGetPrinterStateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/printer] getPrinterState", response, response.Code())
	}
}

// NewGetPrinterStateOK creates a GetPrinterStateOK with default headers values
func NewGetPrinterStateOK() *GetPrinterStateOK {
	return &GetPrinterStateOK{}
}

/*
GetPrinterStateOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetPrinterStateOK struct {
	Payload *models.PrinterState
}

// IsSuccess returns true when this get printer state o k response has a 2xx status code
func (o *GetPrinterStateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get printer state o k response has a 3xx status code
func (o *GetPrinterStateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get printer state o k response has a 4xx status code
func (o *GetPrinterStateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get printer state o k response has a 5xx status code
func (o *GetPrinterStateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get printer state o k response a status code equal to that given
func (o *GetPrinterStateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get printer state o k response
func (o *GetPrinterStateOK) Code() int {
	return 200
}

func (o *GetPrinterStateOK) Error() string {
	return fmt.Sprintf("[GET /api/printer][%d] getPrinterStateOK  %+v", 200, o.Payload)
}

func (o *GetPrinterStateOK) String() string {
	return fmt.Sprintf("[GET /api/printer][%d] getPrinterStateOK  %+v", 200, o.Payload)
}

func (o *GetPrinterStateOK) GetPayload() *models.PrinterState {
	return o.Payload
}

func (o *GetPrinterStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrinterState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrinterStateConflict creates a GetPrinterStateConflict with default headers values
func NewGetPrinterStateConflict() *GetPrinterStateConflict {
	return &GetPrinterStateConflict{}
}

/*
GetPrinterStateConflict describes a response with status code 409, with default header values.

If the printer is not operational
*/
type GetPrinterStateConflict struct {
}

// IsSuccess returns true when this get printer state conflict response has a 2xx status code
func (o *GetPrinterStateConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get printer state conflict response has a 3xx status code
func (o *GetPrinterStateConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get printer state conflict response has a 4xx status code
func (o *GetPrinterStateConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get printer state conflict response has a 5xx status code
func (o *GetPrinterStateConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get printer state conflict response a status code equal to that given
func (o *GetPrinterStateConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get printer state conflict response
func (o *GetPrinterStateConflict) Code() int {
	return 409
}

func (o *GetPrinterStateConflict) Error() string {
	return fmt.Sprintf("[GET /api/printer][%d] getPrinterStateConflict ", 409)
}

func (o *GetPrinterStateConflict) String() string {
	return fmt.Sprintf("[GET /api/printer][%d] getPrinterStateConflict ", 409)
}

func (o *GetPrinterStateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
