// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kihamo/boggart/providers/smcenter/models"
)

// UserInfoReader is a Reader for the UserInfo structure.
type UserInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUserInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUserInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUserInfoOK creates a UserInfoOK with default headers values
func NewUserInfoOK() *UserInfoOK {
	return &UserInfoOK{}
}

/*
UserInfoOK describes a response with status code 200, with default header values.

Successful operation
*/
type UserInfoOK struct {
	Payload *models.UserInfo
}

// IsSuccess returns true when this user info o k response has a 2xx status code
func (o *UserInfoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user info o k response has a 3xx status code
func (o *UserInfoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user info o k response has a 4xx status code
func (o *UserInfoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user info o k response has a 5xx status code
func (o *UserInfoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user info o k response a status code equal to that given
func (o *UserInfoOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the user info o k response
func (o *UserInfoOK) Code() int {
	return 200
}

func (o *UserInfoOK) Error() string {
	return fmt.Sprintf("[GET /User/Info][%d] userInfoOK  %+v", 200, o.Payload)
}

func (o *UserInfoOK) String() string {
	return fmt.Sprintf("[GET /User/Info][%d] userInfoOK  %+v", 200, o.Payload)
}

func (o *UserInfoOK) GetPayload() *models.UserInfo {
	return o.Payload
}

func (o *UserInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserInfoUnauthorized creates a UserInfoUnauthorized with default headers values
func NewUserInfoUnauthorized() *UserInfoUnauthorized {
	return &UserInfoUnauthorized{}
}

/*
UserInfoUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UserInfoUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this user info unauthorized response has a 2xx status code
func (o *UserInfoUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user info unauthorized response has a 3xx status code
func (o *UserInfoUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user info unauthorized response has a 4xx status code
func (o *UserInfoUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this user info unauthorized response has a 5xx status code
func (o *UserInfoUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this user info unauthorized response a status code equal to that given
func (o *UserInfoUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the user info unauthorized response
func (o *UserInfoUnauthorized) Code() int {
	return 401
}

func (o *UserInfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /User/Info][%d] userInfoUnauthorized  %+v", 401, o.Payload)
}

func (o *UserInfoUnauthorized) String() string {
	return fmt.Sprintf("[GET /User/Info][%d] userInfoUnauthorized  %+v", 401, o.Payload)
}

func (o *UserInfoUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UserInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserInfoDefault creates a UserInfoDefault with default headers values
func NewUserInfoDefault(code int) *UserInfoDefault {
	return &UserInfoDefault{
		_statusCode: code,
	}
}

/*
UserInfoDefault describes a response with status code -1, with default header values.

Unexpected error
*/
type UserInfoDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this user info default response has a 2xx status code
func (o *UserInfoDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this user info default response has a 3xx status code
func (o *UserInfoDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this user info default response has a 4xx status code
func (o *UserInfoDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this user info default response has a 5xx status code
func (o *UserInfoDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this user info default response a status code equal to that given
func (o *UserInfoDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the user info default response
func (o *UserInfoDefault) Code() int {
	return o._statusCode
}

func (o *UserInfoDefault) Error() string {
	return fmt.Sprintf("[GET /User/Info][%d] userInfo default  %+v", o._statusCode, o.Payload)
}

func (o *UserInfoDefault) String() string {
	return fmt.Sprintf("[GET /User/Info][%d] userInfo default  %+v", o._statusCode, o.Payload)
}

func (o *UserInfoDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UserInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
