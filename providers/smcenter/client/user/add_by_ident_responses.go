// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/kihamo/boggart/providers/smcenter/models"
)

// AddByIdentReader is a Reader for the AddByIdent structure.
type AddByIdentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddByIdentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddByIdentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddByIdentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAddByIdentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddByIdentOK creates a AddByIdentOK with default headers values
func NewAddByIdentOK() *AddByIdentOK {
	return &AddByIdentOK{}
}

/*
AddByIdentOK describes a response with status code 200, with default header values.

Successful operation
*/
type AddByIdentOK struct {
	Payload *models.Account
}

// IsSuccess returns true when this add by ident o k response has a 2xx status code
func (o *AddByIdentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add by ident o k response has a 3xx status code
func (o *AddByIdentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add by ident o k response has a 4xx status code
func (o *AddByIdentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add by ident o k response has a 5xx status code
func (o *AddByIdentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add by ident o k response a status code equal to that given
func (o *AddByIdentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add by ident o k response
func (o *AddByIdentOK) Code() int {
	return 200
}

func (o *AddByIdentOK) Error() string {
	return fmt.Sprintf("[POST /User/AddAccountByIdent][%d] addByIdentOK  %+v", 200, o.Payload)
}

func (o *AddByIdentOK) String() string {
	return fmt.Sprintf("[POST /User/AddAccountByIdent][%d] addByIdentOK  %+v", 200, o.Payload)
}

func (o *AddByIdentOK) GetPayload() *models.Account {
	return o.Payload
}

func (o *AddByIdentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Account)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddByIdentUnauthorized creates a AddByIdentUnauthorized with default headers values
func NewAddByIdentUnauthorized() *AddByIdentUnauthorized {
	return &AddByIdentUnauthorized{}
}

/*
AddByIdentUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddByIdentUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this add by ident unauthorized response has a 2xx status code
func (o *AddByIdentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add by ident unauthorized response has a 3xx status code
func (o *AddByIdentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add by ident unauthorized response has a 4xx status code
func (o *AddByIdentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add by ident unauthorized response has a 5xx status code
func (o *AddByIdentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add by ident unauthorized response a status code equal to that given
func (o *AddByIdentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add by ident unauthorized response
func (o *AddByIdentUnauthorized) Code() int {
	return 401
}

func (o *AddByIdentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /User/AddAccountByIdent][%d] addByIdentUnauthorized  %+v", 401, o.Payload)
}

func (o *AddByIdentUnauthorized) String() string {
	return fmt.Sprintf("[POST /User/AddAccountByIdent][%d] addByIdentUnauthorized  %+v", 401, o.Payload)
}

func (o *AddByIdentUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddByIdentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddByIdentDefault creates a AddByIdentDefault with default headers values
func NewAddByIdentDefault(code int) *AddByIdentDefault {
	return &AddByIdentDefault{
		_statusCode: code,
	}
}

/*
AddByIdentDefault describes a response with status code -1, with default header values.

Unexpected error
*/
type AddByIdentDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this add by ident default response has a 2xx status code
func (o *AddByIdentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this add by ident default response has a 3xx status code
func (o *AddByIdentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this add by ident default response has a 4xx status code
func (o *AddByIdentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this add by ident default response has a 5xx status code
func (o *AddByIdentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this add by ident default response a status code equal to that given
func (o *AddByIdentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the add by ident default response
func (o *AddByIdentDefault) Code() int {
	return o._statusCode
}

func (o *AddByIdentDefault) Error() string {
	return fmt.Sprintf("[POST /User/AddAccountByIdent][%d] addByIdent default  %+v", o._statusCode, o.Payload)
}

func (o *AddByIdentDefault) String() string {
	return fmt.Sprintf("[POST /User/AddAccountByIdent][%d] addByIdent default  %+v", o._statusCode, o.Payload)
}

func (o *AddByIdentDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddByIdentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
AddByIdentBody add by ident body
swagger:model AddByIdentBody
*/
type AddByIdentBody struct {

	// confirm
	// Required: true
	Confirm *bool `json:"Confirm"`

	// ident
	// Required: true
	Ident *string `json:"Ident"`

	// pin code
	// Required: true
	PinCode *string `json:"PinCode"`
}

// Validate validates this add by ident body
func (o *AddByIdentBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateConfirm(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIdent(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePinCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AddByIdentBody) validateConfirm(formats strfmt.Registry) error {

	if err := validate.Required("request"+"."+"Confirm", "body", o.Confirm); err != nil {
		return err
	}

	return nil
}

func (o *AddByIdentBody) validateIdent(formats strfmt.Registry) error {

	if err := validate.Required("request"+"."+"Ident", "body", o.Ident); err != nil {
		return err
	}

	return nil
}

func (o *AddByIdentBody) validatePinCode(formats strfmt.Registry) error {

	if err := validate.Required("request"+"."+"PinCode", "body", o.PinCode); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this add by ident body based on context it is used
func (o *AddByIdentBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AddByIdentBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AddByIdentBody) UnmarshalBinary(b []byte) error {
	var res AddByIdentBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
