// Code generated by go-swagger; DO NOT EDIT.

package bill

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kihamo/boggart/providers/smcenter/models"
)

// DownloadReader is a Reader for the Download structure.
type DownloadReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *DownloadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDownloadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDownloadDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDownloadOK creates a DownloadOK with default headers values
func NewDownloadOK(writer io.Writer) *DownloadOK {
	return &DownloadOK{

		Payload: writer,
	}
}

/*
DownloadOK describes a response with status code 200, with default header values.

Successful operation
*/
type DownloadOK struct {
	Payload io.Writer
}

// IsSuccess returns true when this download o k response has a 2xx status code
func (o *DownloadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this download o k response has a 3xx status code
func (o *DownloadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download o k response has a 4xx status code
func (o *DownloadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this download o k response has a 5xx status code
func (o *DownloadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this download o k response a status code equal to that given
func (o *DownloadOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the download o k response
func (o *DownloadOK) Code() int {
	return 200
}

func (o *DownloadOK) Error() string {
	return fmt.Sprintf("[GET /Public/DownloadBill/{id}][%d] downloadOK  %+v", 200, o.Payload)
}

func (o *DownloadOK) String() string {
	return fmt.Sprintf("[GET /Public/DownloadBill/{id}][%d] downloadOK  %+v", 200, o.Payload)
}

func (o *DownloadOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *DownloadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadUnauthorized creates a DownloadUnauthorized with default headers values
func NewDownloadUnauthorized() *DownloadUnauthorized {
	return &DownloadUnauthorized{}
}

/*
DownloadUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DownloadUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this download unauthorized response has a 2xx status code
func (o *DownloadUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this download unauthorized response has a 3xx status code
func (o *DownloadUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download unauthorized response has a 4xx status code
func (o *DownloadUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this download unauthorized response has a 5xx status code
func (o *DownloadUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this download unauthorized response a status code equal to that given
func (o *DownloadUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the download unauthorized response
func (o *DownloadUnauthorized) Code() int {
	return 401
}

func (o *DownloadUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Public/DownloadBill/{id}][%d] downloadUnauthorized  %+v", 401, o.Payload)
}

func (o *DownloadUnauthorized) String() string {
	return fmt.Sprintf("[GET /Public/DownloadBill/{id}][%d] downloadUnauthorized  %+v", 401, o.Payload)
}

func (o *DownloadUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadDefault creates a DownloadDefault with default headers values
func NewDownloadDefault(code int) *DownloadDefault {
	return &DownloadDefault{
		_statusCode: code,
	}
}

/*
DownloadDefault describes a response with status code -1, with default header values.

Unexpected error
*/
type DownloadDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this download default response has a 2xx status code
func (o *DownloadDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this download default response has a 3xx status code
func (o *DownloadDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this download default response has a 4xx status code
func (o *DownloadDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this download default response has a 5xx status code
func (o *DownloadDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this download default response a status code equal to that given
func (o *DownloadDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the download default response
func (o *DownloadDefault) Code() int {
	return o._statusCode
}

func (o *DownloadDefault) Error() string {
	return fmt.Sprintf("[GET /Public/DownloadBill/{id}][%d] download default  %+v", o._statusCode, o.Payload)
}

func (o *DownloadDefault) String() string {
	return fmt.Sprintf("[GET /Public/DownloadBill/{id}][%d] download default  %+v", o._statusCode, o.Payload)
}

func (o *DownloadDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
