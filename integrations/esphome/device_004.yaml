substitutions:
  node_name: !secret device_004_node_name
  ip_address: !secret device_004_ip_address

packages:
  common: !include ./_includes/common.yaml
  wifi: !include ./_includes/wifi/home.yaml
  binary_sensor: !include ./_includes/binary_sensor.yaml
  sensor: !include ./_includes/sensor.yaml
  switch: !include ./_includes/switch.yaml
  text_sensor: !include ./_includes/text_sensor.yaml
  time: !include ./_includes/time.yaml

esphome:
  comment: !secret device_004_comment

esp32:
  board: nodemcu-32s

dallas:
  - pin: GPIO32

binary_sensor:
  - platform: gpio
    id: "aquastorozh_alarm"
    name: "Aquastorozh alarm"
    pin:
      number: GPIO23
      mode: INPUT_PULLUP

  - platform: gpio
    id: "door"
    name: "Entrance door"
    device_class: "door"
    pin:
      number: GPIO4
      mode: INPUT_PULLUP

#  - platform: template
#    id: kettle_mode
#    name: "Kettle Mode"

sensor:
  - platform: dallas
    address: 0xA0000003AF354D28
    name: "Water cold"
  - platform: dallas
    address: 0xC9000003AF6CB128
    name: "Water hot"

#  - platform: template
#    id: kettle_temp
#    name: "Kettle Temp"
#    unit_of_measurement: '°C'
#    accuracy_decimals: 0
#    icon: "mdi:thermometer"
#    device_class: "temperature"

  - platform: esp32_hall
    id: "hall"
    name: "ESP32 Hall Sensor"
    update_interval: 60s

#  - platform: xiaomi_miscale
#    mac_address: !secret device_004_xiaomi_miscale_mac
#    weight:
#      id: "scale_weight"
#      name: "Scale Weight"
#    impedance:
#      id: "scale_impedance"
#      name: "Scale Impedance"
#    clear_impedance: true

#  - platform: pvvx_mithermometer
#    mac_address: !secret device_004_xiaomi_temperature_mac
#    temperature:
#      id: "thermometer_temperature"
#      name: "PVVX Temperature"
#    humidity:
#      id: "thermometer_humidity"
#      name: "PVVX Humidity"
#    battery_level:
#      id: "thermometer_battery_level"
#      name: "PVVX Battery-Level"
#    battery_voltage:
#      id: "thermometer_battery_voltage"
#      name: "PVVX Battery-Voltage"
#    signal_strength:
#      id: "thermometer_signal_strength"
#      name: "PVVX Signal"

switch:
  - platform: gpio
    id: "aquastorozh_enabled"
    name: "Aquastorozh enable"
    pin:
      number: GPIO19
      mode: OUTPUT
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      then:
        - switch.template.publish:
            id: aquastorozh
            state: ON
        - delay: 300ms
        - switch.turn_off: aquastorozh_enabled
    internal: true
  - platform: gpio
    id: "aquastorozh_disable"
    name: "Aquastorozh disable"
    pin:
      number: GPIO21
      mode: OUTPUT
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      then:
        - switch.template.publish:
            id: aquastorozh
            state: OFF
        - delay: 300ms
        - switch.turn_off: aquastorozh_disable
    internal: true
  - platform: template
    id: "aquastorozh"
    name: "Aquastorozh on/off"
    turn_on_action:
      - switch.turn_on: aquastorozh_enabled
    turn_off_action:
      - switch.turn_on: aquastorozh_disable

  # GPIO27 - relay 1
  # GPIO26 - relay 2
  # GPIO25 - relay 3
  # GPIO33 - relay 4
  - platform: gpio
    id: "heating_children"
    name: "Heating children room"
    icon: "mdi:fire"
    pin:
      number: GPIO25 # relay 3
      mode: OUTPUT
      inverted: true
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: "heating_bedroom"
    name: "Heating bedroom"
    icon: "mdi:fire"
    pin:
      number: GPIO26 # relay 2
      mode: OUTPUT
      inverted: true
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: "heating_living_room"
    name: "Heating living room"
    icon: "mdi:fire"
    pin:
      number: GPIO27 # relay 1
      mode: OUTPUT
      inverted: true
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: "relay_in_4"
    name: "Relay input 4"
    icon: "mdi:fire"
    pin:
      number: GPIO33 # relay 4
      mode: OUTPUT
      inverted: true
    restore_mode: RESTORE_DEFAULT_OFF

#
# BLE
#
# https://github.com/esphome/feature-requests/issues/517
#
# 71 20 83 00 D2 1A C2 82
# 6F 7C B8 09 05 10 02 03
# 39

#
# 15 байт = action IDLE = 0x00, HEATING = 0x01, COOLING = 0x02, KEEP_WARM = 0x03
# 16 байт = Current temperature
# ESP_LOGD("ble_adv", "Response data: %s", hexencode(x).c_str());

#esp32_ble_tracker:
#  scan_parameters:
#    interval: 5s
#    window: 5s
#    active: false
#    duration: 10s
#  on_ble_advertise:
#    - then:
#        - lambda: |-
#            ESP_LOGD("ble_adv", "New BLE device");
#            ESP_LOGD("ble_adv", "  address: %s", x.address_str().c_str());
#            ESP_LOGD("ble_adv", "  name: %s", x.get_name().c_str());
#            ESP_LOGD("ble_adv", "  Advertised service UUIDs:");
#            for (auto uuid : x.get_service_uuids()) {
#                ESP_LOGD("ble_adv", "    - %s", uuid.to_string().c_str());
#            }
#            ESP_LOGD("ble_adv", "  Advertised service data:");
#            for (auto data : x.get_service_datas()) {
#                ESP_LOGD("ble_adv", "    - %s: (length %i)", data.uuid.to_string().c_str(), data.data.size());
#            }
#            ESP_LOGD("ble_adv", "  Advertised manufacturer data:");
#            for (auto data : x.get_manufacturer_datas()) {
#                ESP_LOGD("ble_adv", "    - %s: (length %i)", data.uuid.to_string().c_str(), data.data.size());
#            }
#  on_ble_service_data_advertise:
#    - mac_address: !secret device_004_xiaomi_kettle_mac
#      service_uuid: FE95
#      then:
#        - lambda: |-
#            ESP_LOGD("ble_adv", "Response data: %s", format_hex_pretty(x).c_str());
#
#            id(kettle_temp).publish_state(float(x[16]));
#            if(x[15] == 01) {
#              id(kettle_mode).publish_state(true);
#            } else {
#              id(kettle_mode).publish_state(false);
#            }
