// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/layouts/widget.html
// templates/views/accounts.html
// templates/views/default.html
// templates/views/files.html
// templates/views/group.html
// templates/views/logs.html
// templates/views/password.html
// templates/views/system.html
// templates/views/user.html
// locales/ru/LC_MESSAGES/widget.mo
package xmeye

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/elazarl/go-bindata-assetfs"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesLayoutsWidgetHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\x41\x73\x9b\x3e\x10\xc5\xef\xf9\x14\x3b\x3a\xfd\xff\x07\x4c\x93\x53\xa7\xb5\xdd\xe9\xa1\x3d\xe5\x90\x49\xa7\xe7\xcc\x22\x16\x5b\xad\x90\x88\x24\x88\x3b\x0c\xdf\xbd\x23\x64\x08\x76\x45\x9a\xd8\x6e\x2e\xd1\x48\x6f\xdf\xea\x07\x4f\xc2\x6d\x0b\x8e\xca\x4a\xa2\x23\x60\x19\x5a\x62\xb0\x80\xae\xbb\xba\x6a\x5b\xc8\xa9\x10\x8a\x80\x71\xad\x1c\x29\xc7\xfc\xfc\x32\x17\x0d\x70\x89\xd6\xae\x58\x85\x1b\x4a\x9c\x70\x92\xd8\xfa\x0a\x00\x60\xba\x58\x68\x53\x26\x1b\xa3\xeb\x0a\xaa\x5a\xca\xc4\x88\xcd\xd6\xed\x75\xc7\x5a\xa1\xaa\xda\x05\xf1\x44\xd1\xab\x24\x66\x24\x07\x5d\xe6\x54\x54\xd5\x2b\x11\xb6\x86\x8a\x15\xfb\x84\xdc\x09\xad\x56\x5c\xab\x42\x6c\x6c\x42\xbb\x4a\x1b\xc7\x26\x1e\xe0\x7d\x04\xd7\x61\x60\x6b\xce\xc9\xda\x30\x2e\x23\xce\xbd\xbb\x18\xb9\xd0\x42\x81\x09\xd7\x1b\x06\x3d\xfb\x8a\xb5\x2d\x88\xeb\xf7\x0a\xd8\x97\xbe\x15\x84\xce\xb5\x41\xbf\x8f\xf0\x3c\xd9\x7a\x99\x8a\xc8\xa6\x53\x7c\x05\x89\xd4\xff\x0c\x63\x4b\x98\x5b\x72\xb3\x28\xbe\xf5\xdb\x08\x96\x69\xff\xca\x26\x2f\x3a\xcd\x45\xb3\xcf\x47\x18\xee\xff\x1d\x64\x89\x4b\x42\x53\x88\x9d\x6f\xf3\xe7\xaa\xd1\x4f\x91\x88\x71\x2d\x93\x32\x4f\xae\x6f\xc0\x8f\x6c\x39\x8c\x76\x36\xb9\xbe\x99\x89\xda\xee\xa1\x42\x45\xf2\x38\x66\x07\x8a\x21\xef\x11\x5a\xaf\x33\xda\x3f\x29\x87\x59\xcc\x69\x54\xd6\x63\x6a\x15\x36\xa0\xb0\x49\x1c\x66\x16\x32\x34\x0f\x7e\xc0\x9e\x6d\xa4\xb0\xb1\x5e\xa3\x93\x14\x7b\x6d\x65\xc8\x92\x72\x21\x56\xfe\x4d\x15\x40\x8f\xb0\x08\x29\x01\x96\x53\x81\xb5\xec\x8f\xe9\xd0\xda\x2f\x35\xe4\xb5\xa4\x72\xe8\xba\xf5\x98\xad\x17\xcb\x7f\x60\x83\x96\x1b\x51\xb9\x0f\x8d\x16\xf9\x7f\xef\xfe\xff\xe8\x2d\xa4\x25\xe8\xba\xb6\x85\xc5\x3d\x3d\xd6\x64\xdd\xe2\xfb\xfd\xed\xe2\x0e\xdd\x36\x4c\x87\x1e\x6c\x3d\x86\xe8\xce\x50\x23\xe8\x29\x04\xc8\x27\x65\x99\xca\x48\x86\xde\x4c\x6a\x7f\x59\x47\xe5\xa9\xa0\xcf\xd5\xa7\x70\x0e\x87\x32\xb8\xc4\xa8\xbf\xed\xfd\x2f\x0c\x1d\x8e\xe2\x69\xc8\x43\xed\x39\xc0\xde\x23\x86\x7b\x3b\x5e\x11\x17\x84\x2d\x84\xa4\x93\x69\xc7\xe2\x73\x70\x7b\x93\x18\xef\xd7\xe0\x7e\x61\x60\xe4\x5c\xd7\xca\x9d\xcc\x3c\xad\x3f\x07\x7b\xf0\x89\x91\x7f\x1e\x7b\xfc\x1d\x7e\x99\xd6\x72\x66\x65\x72\xd7\x3a\xcc\x92\xf9\xdb\xf6\xa0\xe2\xe8\xd6\x9d\x3a\xf8\x19\x28\x30\x27\x08\x4f\x0c\x84\x7a\xc1\xcd\xff\xb5\x2d\x64\x52\xf3\x9f\xd0\xff\x86\x09\x3c\x30\x22\xcf\x6f\xe4\xf9\x53\xf6\xca\xa5\xc8\xf4\xd1\xd4\xec\xe7\x71\xdc\xce\xef\x00\x00\x00\xff\xff\x8a\xd1\xe1\x7e\xa3\x09\x00\x00"

func templatesLayoutsWidgetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLayoutsWidgetHtml,
		"templates/layouts/widget.html",
	)
}

func templatesLayoutsWidgetHtml() (*asset, error) {
	bytes, err := templatesLayoutsWidgetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/layouts/widget.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsAccountsHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5d\x8f\xa3\x36\x14\x7d\xdf\x5f\x71\x65\x4d\xab\xcc\x43\x60\xb7\x4f\xd5\x08\x52\xad\x46\x55\xfb\x30\x5b\x55\x51\xe7\x07\x38\xf8\x26\x78\x0b\x36\x6b\x5f\x92\x1d\x21\xfe\x7b\x85\xf9\x08\x09\x90\x8f\x2e\xf3\x32\xb2\xc9\xb1\xef\xb9\xf7\xda\xe7\x0c\x14\x05\x08\xdc\x4a\x85\xc0\x32\xbe\x43\x06\x65\xf9\x01\x00\x20\x10\x72\x0f\x51\xc2\xad\x0d\xd9\x56\x9b\x74\xb9\x33\x3a\xcf\x20\xcb\x93\x64\x69\xe4\x2e\x26\xb6\x72\xb8\x73\xac\x54\x59\x4e\x35\xb8\x87\x70\xa8\x84\x6f\x30\x69\x71\x1b\x52\xa3\x28\x87\xe4\x10\x1b\xdc\x86\xec\x37\x1e\x91\xd4\x2a\xcc\x2d\x1a\xd6\x5b\x09\xd5\x6a\x9b\x47\x11\x5a\x5b\x8f\xd3\x91\x6d\xdc\x56\xb2\x4b\x82\x5b\xd8\xf2\x65\xb5\xd5\x32\x4b\x72\xcb\x80\x24\x25\x18\xb2\xa2\x00\xf9\xe9\x57\x05\xec\xd9\x20\x27\x84\x3a\x98\x07\x65\xc9\x56\x81\x2f\x57\x30\x0d\x18\x32\xf7\xf9\x0d\xe9\xd4\x79\xcf\x97\xcf\x74\x2e\x4d\xa4\x0b\xc9\xf4\x10\xd7\xb3\x09\x7c\xd7\xc3\x5e\xe7\x7d\x21\xf7\xf5\xb4\x19\xd6\x63\xe2\x9b\x04\x5b\xa6\xf5\xc4\xfd\x5d\x5a\x32\x32\x43\x01\x82\x96\x06\x6d\xa6\x95\x95\x7b\x04\xa5\x0f\x86\x67\x0c\x2c\xbd\x55\x59\x1c\xa4\xa0\xf8\xe9\xd3\xc7\x8f\x3f\x31\x90\x22\x64\x3c\x8a\x74\xae\xc8\xf6\x8f\x1c\xc5\xc8\x45\x7f\x6e\xce\xa8\x52\xbc\xea\x72\x7d\xed\x3a\x16\xf8\x14\x5f\x00\x3e\xeb\x34\x45\x45\x37\x61\x3f\xbb\x66\xda\x31\x6c\xe0\xf7\xe9\x54\xbf\x9d\x91\xdd\x68\xf1\x76\x9c\x17\x05\x18\xae\x76\x08\x0f\xf5\x25\x7b\x0a\xc1\x73\x23\x7b\xde\x95\x80\x4c\x5b\xd5\xc9\xcb\x43\x02\x22\x9d\xd8\x8c\xab\x90\xfd\x32\x71\x8c\x8a\xa2\x89\xe5\xfd\xc5\x53\x84\xb2\xac\xb2\xda\xb6\xcf\xbe\x60\xaa\xa1\x2c\x61\x71\x84\x35\x8f\x1e\x8b\x02\x50\x89\xf1\xc3\x42\x62\x82\x4d\x73\x0c\xf0\x3b\x0d\xa4\xe3\x04\x2b\xe4\xbe\xe6\xa1\xda\x52\x78\xcf\x5c\xad\x31\xd5\x7b\x04\x32\x79\x45\x74\xa8\x1f\x60\x74\x75\x68\xea\x49\xc7\x6f\x3c\x44\x93\xfb\x31\xd5\xe3\xfe\x23\x29\x75\xc4\x2a\x01\x84\x14\x29\xd6\x22\x64\x99\xb6\xc4\xa0\xb9\xca\x55\xc0\x07\x6f\x8d\xdf\x72\xb4\xe4\xbd\xae\x5f\xbc\xbf\x39\xc5\x50\x96\x27\x77\x7d\x29\x30\x41\xc2\x9f\xdd\x44\xf1\x14\xc3\x41\x03\xd8\x95\xc4\x2e\xe6\xd3\xb4\x64\x12\x02\x7d\x15\xba\xc6\xb8\x52\x94\x5b\x99\x0e\x84\x4b\x46\xba\x7e\xf8\xdd\x5e\xa0\xdc\x71\xba\x43\x9d\x3f\x0b\xe1\x94\x17\x48\xb7\xa2\xf5\xd0\xc9\xda\xe5\xcc\x2b\x19\x9b\xa7\x36\x2e\xf0\x5d\xc5\x91\x6a\xab\xe7\xa8\x0c\x0a\x49\xc3\xa2\xfc\x2e\x24\xcd\x5a\x8d\xfb\x2f\x87\xdb\x73\x93\x13\x69\x05\xf4\x96\x61\xc8\x6c\xbe\x49\x2b\xb2\x67\x95\x10\x95\xc4\x99\x39\x6a\x41\x86\xdb\x78\x58\x8c\x86\xeb\xbd\xe5\xa8\xb9\x4f\xa3\x02\xbf\xba\xfe\xb7\xdc\xbf\xf1\xd5\x9d\x43\x9e\x3e\x3e\x57\xcb\x53\xcf\x80\x13\x5b\x70\xe7\xfe\x29\x84\x07\xcf\xd9\xfd\x58\xac\xba\x71\xf8\xed\xe4\x3c\xba\x85\xde\x1f\xce\x54\xc6\x24\x9b\xcc\x71\x99\x83\xd6\xab\xbc\x28\x37\x06\x15\xf5\xe4\xb6\xb9\xe3\xd7\xf4\x35\x20\x51\x19\x64\x6f\x33\x67\x8d\x23\xc6\x30\x40\x37\x0e\x73\x11\x7d\xb3\x95\xc0\x89\x9d\x68\x03\x8b\x3a\xc8\x1a\x2d\x9a\x3d\x8a\x47\x58\x4c\xe4\xfc\x38\x8b\xc7\x1c\x3b\xc2\x95\x80\x85\x6a\x5b\xd1\xc6\x77\x6e\xf6\xd8\xfb\x61\x48\xe2\xf2\xa9\xfd\x01\x47\x72\x1a\xdb\x18\x52\x35\xee\x84\xac\xdf\xb4\xff\x6f\x47\xf0\x5e\x96\x74\x13\xd7\x59\x35\xd7\x55\xea\x82\xf0\xd6\x2f\x02\xf7\xe8\xee\x2c\xd5\xc8\xb8\xb5\x07\x6d\xc4\x1d\x15\x39\x70\xa3\xa4\xda\xcd\x56\x94\x44\x47\xff\x8e\xbc\x74\xc4\x4e\xae\x9c\x5a\xb5\x24\x67\x74\xe9\xf7\xbc\x50\xf0\xee\x2e\x36\x5d\x4c\x92\x29\x8e\xfc\xc3\xd3\xd8\xd9\x5d\x87\x0c\x6e\x72\x34\xb8\xc1\xd5\xe0\xaa\xb3\xc1\xb4\xbb\xc1\xf4\xfb\xc0\xc0\xe5\xa6\x03\x8d\xa8\xc8\x10\x18\xf8\xbd\x97\xa9\xc0\x77\x6f\x99\xab\x0f\xbd\xa5\xbd\x0f\x1c\x5f\x6d\xf7\x79\xa3\x28\xc0\x12\x27\x19\xfd\xf9\xcf\x97\x17\x58\xd4\xe3\xd7\xf5\x0b\x30\x5f\x70\x1b\x6f\x34\x37\xc2\xe7\xd6\x22\x59\x7f\x8f\x4a\x68\x63\xfd\x3d\x4f\xa4\xe0\xa4\x8d\xff\xb5\x37\xf1\x52\xa9\xbc\x6a\xe7\x2d\x4f\x2c\xba\x83\xd6\x45\xff\x2f\x00\x00\xff\xff\xe9\x81\x69\x4e\x5d\x11\x00\x00"

func templatesViewsAccountsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsAccountsHtml,
		"templates/views/accounts.html",
	)
}

func templatesViewsAccountsHtml() (*asset, error) {
	bytes, err := templatesViewsAccountsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/accounts.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsDefaultHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xcb\x8e\xdb\x30\x0c\xbc\xe7\x2b\x08\xf5\x61\xa7\xdd\xd8\xc9\xad\xc0\xc6\xe9\x65\x2f\x05\x7a\x28\x82\xf6\x1c\x28\x16\x1d\x73\xab\x48\xae\x44\xdb\x08\x0c\xff\x7b\xe1\x47\x52\xef\xae\x51\xe4\x46\x89\x43\x72\x86\x9c\xa6\x01\x85\x19\x19\x04\x51\xc8\x13\x0a\x68\xdb\x05\x00\xc0\x56\x51\x05\xa9\x96\xde\x27\x22\xb3\xee\xbc\x3a\x39\x5b\x16\x50\x94\x5a\xaf\x1c\x9d\x72\x16\xbb\x1e\xf7\x1a\x4b\xa6\x28\x79\x00\x4f\x10\x3d\x4a\xcb\x23\xea\x2b\xee\xc8\x66\x16\xd5\x23\x8f\x25\xb3\x35\xc0\x97\x02\x13\x31\x3c\xc4\xa4\x10\xba\x62\x4a\xed\x18\x98\xcc\xf6\x81\x3f\x0b\xb0\x26\xd5\x94\xfe\x4e\x44\xe1\xb0\x22\xac\xf7\x98\x39\xf4\x79\xb8\x9c\x19\xd3\x8f\xa2\x9b\x48\xe9\x21\x93\x2b\x7f\x31\xa9\x00\x26\xd6\x98\x88\xa6\x01\xda\x7c\x31\x20\xc6\x36\x02\x22\x68\x5b\xb1\xdb\xc6\x34\xc3\x3a\x1e\x98\xce\x64\x24\xe4\x0e\xb3\xbe\x5f\xb4\xc7\x3f\x25\x7a\x8e\x7e\xed\xbf\x47\x3f\x24\xe7\xd0\xb6\x5f\x65\xca\x64\x4d\x32\x72\xfe\xa8\x6c\x6d\xb4\x95\x2a\xd9\xdc\xa7\xfa\x4e\x69\xd7\xb6\x6f\xe5\x3d\xdd\x32\xff\xd5\x27\x5f\x1d\x34\xee\x2f\x3a\xf1\x41\xac\xa8\x1a\x9e\xd3\x90\xce\x27\xf0\x2e\xbd\x57\xbe\x80\x9a\x14\xe7\x89\xd8\xac\xd7\x1f\x04\xe4\xd8\xb9\xed\xfa\x22\x75\x3b\xad\x80\x78\xb7\x68\x1a\x40\xa3\x3a\xd3\x2e\x26\x4e\x7e\xf6\xff\x7c\xec\x53\x47\x05\x8f\x5e\x92\x45\xa1\x29\x95\xdd\xb8\xf8\x59\x56\x72\x48\x4e\x16\x58\x93\x51\xb6\x8e\x5e\xba\x07\x12\xc8\x4a\xd3\x93\x0c\x97\xd0\xbc\x58\xc2\xfb\x30\x78\x37\xa2\x83\x65\x24\x99\x5d\x18\x78\x97\x06\x0f\x10\xdc\x79\xed\x03\x27\xc1\xe7\xd0\x60\x0d\x4f\x92\x31\x5c\x2e\xa3\x13\xf2\x4f\x3a\x77\xe1\xe3\x6d\x56\xfb\xb8\x58\xcc\xcf\x74\x28\xd5\x25\xbc\x12\x84\x37\x0c\x47\x49\x1e\xf9\x9b\x61\x74\x95\xd4\xe1\xac\xca\x07\xe8\x08\x8f\x7f\x07\x37\x7c\x1e\x68\xac\x81\xb6\x85\x4f\xb0\x59\xaf\xd7\x53\x52\x63\xbc\x8d\x87\x45\x4e\xee\xf1\x37\x00\x00\xff\xff\xa4\x4f\x64\x83\x58\x04\x00\x00"

func templatesViewsDefaultHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsDefaultHtml,
		"templates/views/default.html",
	)
}

func templatesViewsDefaultHtml() (*asset, error) {
	bytes, err := templatesViewsDefaultHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/default.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsFilesHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6d\x6f\xe3\xb8\x11\xfe\xbe\xbf\x62\xc0\xa6\x95\x7d\x58\xbd\x38\xd8\x5c\x0b\x9f\x6d\x60\xef\xb2\xd7\x14\x48\xda\x43\x36\x87\x22\x5d\x2c\x02\x5a\x1c\xdb\xcc\x4a\xa4\x96\xa4\xed\xf8\x0c\xff\xf7\x82\x94\x25\xcb\x96\xec\x38\xbe\x14\x68\x17\xf5\x87\x40\x12\x67\x38\x0f\x9f\x19\x3e\x7c\xc9\x72\x09\x0c\x47\x5c\x20\x90\x8c\x8e\x91\xc0\x6a\xf5\x06\x00\xa0\xc7\xf8\x0c\xe2\x84\x6a\xdd\x27\x73\x4c\x12\x02\xda\x2c\x12\xec\x13\x39\x43\x35\x4a\xe4\xbc\x0b\x74\x6a\x24\x19\x38\x6b\xe7\x31\x92\x2a\x2d\x5c\xec\xb3\x3f\x91\x8a\xff\x26\x85\xa1\x09\x01\x25\xad\xb3\xfd\x4c\x20\x45\x33\x91\xac\x4f\xc6\x68\x08\xd0\xd8\x70\x29\xfa\x64\xb9\x84\xe0\x16\xbf\x4e\x51\x9b\xe0\xd7\xdb\xeb\xe0\x17\x6a\x26\xb0\x5a\x11\xe0\xac\x4f\x46\x3c\x41\xed\xe7\xde\x42\xce\x68\xc2\x19\x35\xb8\x89\xed\xe2\x73\x91\x4d\x0d\x98\x45\x86\x7d\x32\xe1\x8c\xa1\x20\x30\xa3\xc9\x14\xd7\xfe\x04\x04\x4d\xb1\x4f\xf2\x88\x04\xc2\xe3\xfd\x0b\xd7\x91\x92\xe9\x49\x8e\x46\xd6\xdd\x2a\x0c\xc7\x32\xf1\x53\xe6\xbf\x23\xdb\x26\xcb\x25\xf0\xce\x5f\x04\x90\x4b\x6a\x10\x14\x15\x36\x41\x41\x91\xa2\xad\xce\x46\x1c\x13\xa6\xd1\x0c\x6a\x4d\xf5\x58\xc2\x28\x99\xf8\x63\x25\xa7\x19\x69\xb6\xdf\xe3\xa3\x0f\x98\xef\xba\x38\x52\xfc\x4c\x61\x86\x82\x41\xfe\xf6\x5c\xc8\xb2\x1f\x9d\x51\x51\x74\x44\x19\xf3\xa5\xa8\xf6\xe0\x53\xc6\xa4\x20\x83\x1e\x2f\xcb\x8d\xc2\x88\xfa\x31\x4d\x50\x30\xaa\xc8\xa0\x17\xf2\x41\x2f\xb4\xbd\x1c\x11\xac\x9a\x3e\x83\x4f\xa6\x5a\x72\xb6\xcc\xc8\x56\x51\xaf\xa9\x28\x33\x6c\xeb\xd6\x5a\x3d\xd8\xda\x08\x7e\x96\x2a\xa5\x06\xc8\x79\x14\x7d\x1f\x44\x9d\x20\x3a\x87\xce\x45\x37\x7a\x67\xe7\x15\xf8\x50\x1a\x1b\x79\xd0\xb4\x56\x2c\x35\xd0\x21\xe3\xb3\x03\xb9\xdb\xdf\xbc\xa7\xa9\x17\x36\x57\x50\x83\x79\x43\xe1\x9e\xef\x2b\xdc\x9f\x26\x54\x08\x4c\xbe\x81\xaa\x2d\xf4\x6f\xce\x99\x99\x74\xa1\x13\x45\x7f\x3c\xaa\x92\x31\xc1\xd8\xb8\x8a\x8a\x0b\x2e\x72\x49\x28\x5f\x1b\xaa\x0b\x72\xb7\x73\x02\x0a\xbf\x4e\xb9\x42\xd6\x27\xc5\xd3\x11\x51\x97\xcb\x5c\x2c\xe0\x8c\xb3\xb7\x70\x66\xb8\x49\x10\xba\x7d\x08\xd6\x31\x75\x53\x32\x1a\xe1\xcb\xcc\x6a\x65\xa5\xd6\xcf\x38\xb3\xf5\x69\x13\x3c\x02\xfc\x0a\x67\x45\x9f\x0f\x9c\xad\x1b\xd7\xe0\x2d\xe6\xe2\xc9\xda\x5b\x42\x57\xab\x81\xed\x23\x07\xb4\x5a\xf5\xc2\xbc\xff\xa3\x46\x94\xfb\x3f\xcf\x78\x98\x07\xfd\x36\xe6\xcf\x87\x19\x8a\x5c\x9b\xfe\x3f\x85\x58\x9f\xa0\xa5\xc3\xcf\xe9\xc8\x67\x51\xf5\xcb\xeb\x4f\x24\xa8\xcf\x81\xef\x36\xb5\x1f\xb8\xe0\x0f\x36\x38\x90\xef\xc8\x31\xa5\x9f\x67\xf5\x7d\xb2\x56\xc4\xe3\x27\x40\x03\x92\xf7\x7b\x90\xbc\x7f\x11\x12\x6a\xf7\x54\xbf\x1b\xcb\xcd\x1e\x2c\x37\x2f\xc0\x72\x23\x5d\x8f\x0c\x0d\xc6\xe6\x15\x30\xdd\xee\xc1\x74\xfb\x02\x4c\x7f\x45\x81\x8a\xbe\x46\xb6\xae\xf6\xa0\xb9\x7a\x09\x43\x54\x4c\x5f\x0e\xe6\x9b\x50\x44\xfb\xfb\x93\x18\xea\xec\x87\xff\x69\x09\x3c\x22\x5b\xc3\xa9\x31\x52\xac\xf7\xa3\x7a\x3a\x4c\xb9\x29\xa5\x6d\x68\x04\x0c\x8d\xf0\xf5\x34\x8e\x51\x6b\xb2\x29\x8d\x8f\x13\x39\x2f\x0a\x23\xef\xe1\xbf\x33\xdd\xbd\xd0\xca\x73\xfe\x5e\x69\xea\x19\x3a\x4c\xb0\x18\x66\xfe\xe2\xfe\xfa\xda\x28\x9e\x21\x03\x46\x0d\xcd\xbf\x33\xe3\x2b\xd4\x99\x14\x9a\xcf\x10\x84\x9c\x2b\xba\xbb\xb6\xec\x2c\x2d\x3d\x33\x41\xca\xaa\xef\x6a\x07\xa4\x99\x6c\xa8\xfc\x3b\x4d\xb1\xa0\xd2\x4c\x0e\x18\xfe\x88\x63\x2e\xc0\xf0\x23\xcd\x3f\x08\x76\xbc\xf1\xe5\x54\xd1\xfc\x98\x7a\x84\xf1\x47\xfe\xdb\x71\xbd\xbe\x77\x47\x5f\xdd\x64\xdb\x0b\xab\xa4\xd8\xb6\x1d\xca\x86\x92\x2d\x36\xef\x9b\x2d\xa6\x3d\x28\xb9\xcd\xa5\x3b\x31\x55\xf7\x28\x0d\x34\x33\xb7\xff\xb3\x96\xc1\xcf\x3c\x41\x4b\x75\x8e\x84\xd5\x2d\x7b\x3a\x56\x3c\x2b\x4e\x66\x34\xcb\x12\x1e\x3b\x4e\xc2\x47\x3a\xa3\x79\x23\x19\x30\x19\x4f\x53\x14\x26\x98\x2b\x6e\xb0\x65\x4f\x57\x77\xf2\xa3\x51\x5c\x8c\x5b\x5e\x19\xcc\xa5\xea\x8e\xa7\xb8\x75\xec\xf2\xa3\x8e\x1f\x9d\xdf\xb9\x63\x57\x37\xba\xf0\xa3\x3f\x77\xa3\xc8\xea\xb1\xd7\x6e\xf7\xc2\x3c\xc2\xe0\x3f\x0f\xee\x83\x60\xaf\x09\xad\xec\xb7\xa8\xa1\xbd\x0c\x2f\x97\x30\x99\xa6\x54\x3c\x0c\x17\x06\x75\x25\x2f\xd7\x28\xc6\xee\xfa\xa5\xd1\xaf\x9c\xa6\xf8\x64\xfc\x18\x85\x41\xd5\x20\x6c\x55\x41\xb4\x9a\xe5\x04\x10\xca\x27\xff\x69\x9f\xa2\xf6\x28\x4c\x14\x8e\xdc\x71\x63\xce\xd9\x18\xcd\xc3\x54\x25\x70\x06\xe5\xcd\x0d\x61\x72\x2e\x12\x49\x19\x01\x22\xdc\x6c\xdd\x29\x29\x77\x7a\xcf\x5b\x5a\x99\xe2\xc2\x54\xce\x29\xf9\xe1\x83\x3c\x10\x68\x1d\xaa\x8d\xa8\x13\x9d\x3f\x74\x2e\xa2\x77\xd1\x05\x69\x57\xcd\x9b\xb2\xb5\x6d\xbc\xb6\x7b\x32\x6d\x77\x94\x6f\xd6\x6e\xf7\xcc\xe3\xdd\x7b\x0c\x0d\x23\xea\x5b\x7f\x7f\x33\x46\x87\xd8\xd1\xb1\xd6\x86\xb2\xe5\xcc\x06\x58\xdf\x76\xd0\x26\x4d\xae\x2f\xb5\x5b\x09\xdd\x9e\xf4\xf5\x43\x56\x2f\xac\x4c\xfb\x5e\xe8\xf4\x77\xf0\x66\x63\xf7\xa6\x72\x7d\x68\xf5\xa2\xbc\x3e\x5c\x2e\x41\x1b\x6a\x78\x7c\x75\x77\x73\x0d\xad\xfc\xf9\xd7\xdb\x6b\x20\x21\xa3\x7a\x32\x94\x54\xb1\x90\x6a\x8d\x46\x87\x33\x14\x4c\x2a\x1d\x0e\xa5\x34\xda\x28\x9a\xb9\x5b\x17\xa7\x2e\x19\x8f\xbf\xa0\x0a\x63\xad\xc3\x9d\x6f\x41\xca\x45\x10\x6b\x4d\x60\x44\x13\x8d\x96\xe9\x3d\xb8\x1e\xf5\xef\x42\x95\x4a\x3b\x81\xc3\xc7\xe2\xc9\x05\x7e\xdc\x8a\xfb\xfa\x03\x7e\x6c\x1e\xef\x76\xd8\x3c\x29\x47\xe9\x50\x99\xd0\xb3\x56\x21\x49\xed\x40\x21\x65\x8b\xd6\x68\x2a\xdc\xac\x82\x56\x1b\x96\x5b\xa5\x72\xd6\xf2\xfe\xb0\xb9\x05\xf3\xda\xc1\x0e\xa4\xd6\xb2\x56\x70\x76\x79\xfb\xc5\x35\xfe\x4d\xc4\x0a\x6d\x9c\x2e\x7c\x1f\xbd\xad\x19\xa6\x5c\x5c\x52\x83\x5d\xc8\x49\x6d\xb5\x03\x3d\x1d\x1a\x45\x63\xd3\xba\x78\x0b\xde\x02\xa9\xf2\xda\x0d\x6e\xf4\x69\xc7\x0d\x05\xfb\xc7\xa8\xe5\x31\xba\x68\xb2\xb7\x7c\x2c\x7e\x74\xdb\xa1\x9f\xec\x0c\x43\xdd\x05\xaf\x32\x09\xbd\xba\x4b\x22\x63\x9a\x60\x17\xea\x83\xb3\xbf\x11\x57\xda\x5c\xd2\x45\x17\x3a\x75\x57\x67\xe0\x54\xa1\x0b\xde\xfd\xfd\xfd\x7d\x70\x73\x13\x5c\x5e\xc2\xd5\x55\x37\x4d\xbd\x9a\xf9\xaa\xde\x83\x63\x57\xef\x0b\xee\x95\x0a\x70\x27\x19\x5d\xd8\x55\x9c\xec\xe4\x84\x00\x19\xca\xf1\x98\x2a\xe3\xd6\x8a\x2e\x7c\xda\x10\x6c\xa8\x32\x1b\xae\x4a\x0a\x3f\x37\x0f\x64\x13\xec\x1e\xb5\x41\x75\x42\xc0\x22\xa3\x9d\xb7\x60\x83\x6a\x6f\x3f\x88\x46\xe3\x6a\x6e\x9f\x45\x79\x37\xe1\x1a\xe6\x88\x5f\x4e\xa5\x85\x6b\xf9\x4f\xc4\x2f\x5b\xa8\xd6\x08\xca\xa6\x67\x51\x5c\x53\x6d\x4e\x42\x51\x1d\x7e\x19\xee\x30\xb8\x3d\x3e\x2f\xc6\xec\x98\x4b\xa5\x30\x93\x53\xa9\x73\xce\x4d\xc4\xad\x1b\x8e\xa3\xed\x24\x08\x55\x0e\xd6\xd1\x0e\xe1\x6a\xb4\x7f\x21\x58\xc7\x97\x55\xa8\x53\xe9\x5a\xab\x5b\x8d\xad\xfc\xfb\x71\x64\x9d\x12\xbf\x3a\xf6\x3c\xd6\x01\x4c\x4d\xd6\xdb\x38\x9f\x13\xb4\x55\xfb\x87\x37\x7b\x16\x14\xab\x92\x9e\x8b\x91\x72\x53\x59\x82\x70\x77\x0d\xb2\xbf\x19\x55\xc0\x32\xe8\x37\x2e\x48\xd4\xea\xc3\x16\x03\xde\x6e\xd8\x7a\xe8\xfc\x48\xfe\xa9\xf2\x3f\xbd\xcf\x5e\x3b\x98\xd1\xa4\xb5\x1e\x3e\xcb\x72\x66\xec\x62\xd3\x0e\x72\x4d\x6f\x39\x49\xf7\x6f\x6e\xfc\xcb\xcb\x4f\x77\x9f\x9d\xa8\x77\xb5\xfe\x97\xd7\x6e\xd7\xef\x24\x0e\xc4\x33\xb2\x21\x1a\x0a\x76\x52\xac\x55\xe5\xbd\x78\x2e\x8f\x07\x9b\x0d\xd1\xbf\x03\x00\x00\xff\xff\x4f\x71\xcf\x2e\xe6\x1d\x00\x00"

func templatesViewsFilesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsFilesHtml,
		"templates/views/files.html",
	)
}

func templatesViewsFilesHtml() (*asset, error) {
	bytes, err := templatesViewsFilesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/files.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsGroupHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x41\x6b\xdc\x3c\x10\xbd\xe7\x57\x0c\xe2\x3b\x7c\x2d\xd8\x26\x0d\x84\x52\xd6\x0b\x25\x14\x5a\x48\x7a\x28\xcd\xb9\xc8\xd6\x78\x57\xa9\x2c\xb9\x1a\xd9\x4d\x6a\xfc\xdf\x8b\x2c\xdb\xeb\x7a\x9d\xd2\x0d\x29\xf4\x36\x5e\x59\xf3\xde\xbc\xf7\x64\x6d\xdb\x82\xc0\x42\x6a\x04\x56\xf1\x1d\x32\xe8\xba\x33\x00\x80\x4d\x61\x6c\x09\xb9\xe2\x44\x29\xf3\x75\xb4\x37\x56\xfe\x30\xda\x71\x05\xfd\xb3\xe2\x19\xaa\x48\x61\xe1\x18\x58\xa3\x30\xbc\xc6\xa0\x44\xb7\x37\x22\x65\x95\x21\xc7\x40\x8a\x94\x11\x6f\x30\xda\x59\x53\x57\x0c\xb4\x69\xb8\x92\x82\x3b\xdc\xf6\x38\x3d\x96\x90\xcd\x08\x25\x1d\x96\xa1\x7f\xd8\x70\x78\xab\x7f\xb3\x07\xf5\xeb\x29\xd3\xbc\x44\x36\x6e\xcb\x8d\x76\xd6\xa8\x40\x0a\x72\xa3\xa2\x52\x44\x17\x7d\x41\xe5\x50\xdc\x53\x74\xfe\x6a\xd1\xb0\x6d\x41\x9e\xbf\xd6\xc0\x3e\xf6\xdd\x62\xe8\x3a\xd8\x50\xc5\xf5\xd8\xd8\xe2\xb7\x5a\x5a\x14\x6c\xfb\x72\x93\xf8\x85\x05\xa1\xa4\x47\x5c\xfc\x38\x9b\x67\xa0\x72\x39\x52\xb9\x7c\x94\x4a\xbf\x53\xea\xaa\x76\xe0\x1e\x2a\x4c\x99\xc3\x7b\xc7\x7e\xb1\x60\x98\x92\x81\x9f\x7d\x54\xc0\x2b\x1c\xaa\x91\xeb\x8c\x35\x34\x5c\xd5\x98\xb2\xb6\x85\xb8\x17\x34\xf6\x83\x42\xd7\x2d\x85\x4d\x84\x6c\x66\x8e\x2c\x1e\x9f\x64\x50\x89\xa5\x79\x3e\x83\x6e\xfa\x6e\xf1\x98\xcf\x7f\xc2\x80\x30\xa1\x37\x20\x54\x47\x62\x7b\xd2\xa7\x8a\xed\x27\x2e\x20\xce\xb9\x7e\x27\xa4\x7b\x5b\x3b\x7f\xf0\x9c\x44\x9a\x8f\xfe\x34\x47\x86\x33\xf8\x5c\x96\x8c\xdc\x1e\xfe\xae\x2f\x6d\x0b\x96\xeb\x1d\xc2\x7f\x7c\x04\x84\x37\x29\xc4\x7c\x5d\x9a\x55\xb0\x3d\xe6\x5f\x33\x73\xbf\xe2\xf8\x41\xa3\xf5\xb5\xa3\x54\x4c\xbd\xa6\x64\x28\xee\xc6\x44\xcc\x38\xcd\xe3\x70\x60\x3e\x9d\xbf\xc1\xe7\xd9\xca\x07\xba\xf2\xad\x51\xf8\x8f\x50\x1e\xca\x01\x0e\x85\xef\x82\xda\x2f\x6d\x61\xb5\xe1\xfa\x60\x6b\x2e\xc0\x71\xe6\x06\x99\x03\xc0\x69\x59\x5d\xec\x99\xab\xae\xf4\x17\x32\x4a\x0a\xb6\xfd\xcd\xf7\xe4\xf1\xe0\x3e\x16\x96\x52\x44\xa6\x28\x08\x5d\x74\xb1\x92\xcc\x02\x34\x0e\xc7\xcf\x5b\x02\x8c\xad\x86\x23\xab\x9d\x33\x3a\x5c\x4f\xa8\x05\x1b\xcc\xa5\x3a\x2b\xe5\xe1\xd0\x67\x4e\x43\xe6\x74\xf4\x9d\x5b\x2d\xf5\x8e\x6d\xa7\xec\xdf\x56\xfe\x0e\x0b\xc1\xdf\x24\xa1\xdb\xb1\x9e\x8a\x56\xad\x39\x11\x9d\xea\x3c\x47\xa2\x19\xfa\x95\xc5\x3f\x40\x3f\xc5\xcd\x4d\xe2\x8d\xd8\x9e\x1d\xf6\x9d\xcd\xfe\x1a\xdc\xd1\xa4\x62\xdb\x02\x39\xee\x64\xfe\xfe\xf3\xcd\x35\xfc\x1f\xea\xdb\x4f\xd7\xc0\x12\xc1\x69\x9f\x19\x6e\x45\xc2\x89\xd0\x51\xd2\xa0\x16\xc6\x52\x32\x5c\xf9\xc6\x26\x77\xb3\x87\xb8\x94\x3a\xf6\x9d\x0b\xae\x08\x5f\x78\x80\x09\xfd\x67\x00\x00\x00\xff\xff\xad\x2d\x3e\xcb\x97\x08\x00\x00"

func templatesViewsGroupHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsGroupHtml,
		"templates/views/group.html",
	)
}

func templatesViewsGroupHtml() (*asset, error) {
	bytes, err := templatesViewsGroupHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/group.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsLogsHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcf\x8e\xd3\x30\x10\xc6\xef\xfb\x14\x23\x03\xda\xdd\x43\x12\x67\x45\x01\x45\x49\x4e\x88\x1b\x12\x12\xe5\x01\xa6\xf1\x90\x1a\xa5\xb6\x65\x0f\xad\x22\x2b\xef\x8e\x92\xd0\x7f\xb4\x65\x7b\x89\x34\xf1\xcf\x9f\xbf\x99\x6f\x62\x04\x45\x3f\xb5\x21\x10\x0e\x5b\x12\x30\x0c\x0f\x00\x00\x25\xe3\xaa\x23\x68\x3a\x0c\xa1\x12\x73\x31\x7d\x93\xc0\x5e\x3b\x52\xa0\x90\x71\xfe\xaf\x38\xf1\x14\x9c\x35\x41\x6f\x09\x8c\xdd\x79\x74\x02\x02\xf7\x1d\x55\x62\xa7\x15\xaf\x8b\x5c\xca\x77\xa2\x9e\x94\x67\xf5\x35\xa1\x3a\xad\xfd\xb1\xf8\x0b\xd4\x31\x82\xce\x3f\x19\x10\x6f\x04\xa4\x30\x0c\x65\xc6\xeb\xff\x50\x4b\xbd\xa1\xbb\xc0\xaf\x14\xc2\xd4\xea\x3d\xa2\xbd\xbb\x0f\xfc\x11\xc8\x5f\x03\xcb\xec\xb4\xb5\xf1\xec\x9f\xc6\x57\x56\xf5\xc7\x3a\x46\xf0\x68\x5a\x82\xb7\x9d\x6d\xa1\xa8\x20\xed\x6c\x1b\xf6\xa1\xdc\x18\x95\x1a\x6d\x8c\x17\xd2\x6f\x36\x68\xd6\xd6\xcc\x36\xd4\x25\x58\x86\xc6\x6b\xc7\xc0\xbd\xa3\x4a\xa0\x73\x9d\x6e\x70\xbc\x91\xfd\xc2\x2d\xce\x87\xa2\x56\xb6\xf9\xbd\x21\xc3\xe9\xce\x6b\xa6\x27\x85\x4c\x4b\xfb\x9d\xbd\x36\xed\xd3\xe3\xfe\xad\x71\xde\xe9\x17\xeb\x37\xc8\x20\x5e\xa4\xfc\x90\xc8\x3c\x91\x2f\xcb\x7c\x51\xc8\xf7\x85\x5c\x24\xf2\x63\x21\xe5\xb8\x50\x8f\xcf\xcf\x65\x36\x6b\xd7\xd7\x6d\xed\x35\x3f\x23\xe3\x4d\xef\x87\x87\x7b\x47\xaf\x42\x63\x1e\x17\xd0\x79\x18\x31\x02\x19\x75\x36\xdb\xec\x24\x8e\x32\x9b\xb6\xbb\x7e\x38\x70\x7f\x02\x00\x00\xff\xff\x46\x05\x1a\x85\x2c\x03\x00\x00"

func templatesViewsLogsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsLogsHtml,
		"templates/views/logs.html",
	)
}

func templatesViewsLogsHtml() (*asset, error) {
	bytes, err := templatesViewsLogsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/logs.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsPasswordHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\xc1\x8e\xd3\x30\x10\xbd\xf7\x2b\x46\x73\x02\xa4\x34\x5a\x56\x5a\x71\x68\x72\xe1\xc2\x61\x01\x09\xc1\x19\x39\xf5\xa4\xf5\xca\x19\x07\x8f\x93\x02\x51\xff\x1d\xd9\x49\xda\x28\xa2\x88\x03\x12\xda\xdb\x73\x3c\x9e\xf7\xe6\x3d\x65\x86\x01\x34\xd5\x86\x09\xb0\x55\x07\x42\x38\x9f\x37\x00\x00\xbb\xda\xf9\x06\xf6\x56\x89\x14\x18\x71\x76\x74\xde\xfc\x74\x1c\x94\x85\x74\xb6\xaa\x22\x9b\x59\xaa\x03\x82\x77\x96\xc6\x32\x84\x86\xc2\xd1\xe9\x02\x5b\x27\x01\xc1\xe8\x02\x45\xf5\x94\xb5\x4a\xe4\xe4\xbc\x46\x60\xd7\x2b\x6b\xb4\x0a\x54\x26\xaa\x44\xa7\x4d\x3f\xb3\x99\x40\xcd\x48\x71\xf0\xae\x6b\xf1\x5a\x95\x2a\x13\x6f\xbc\x2f\xd0\x59\x8d\xf3\xab\xbd\xe3\xe0\x9d\x1d\x65\xc1\xde\xd9\xac\xd1\xd9\x7d\x02\xd2\x4c\xe0\xbb\x64\x77\xaf\x57\xfd\x86\x01\xcc\xdd\x1b\x06\xfc\x68\x35\x5c\x45\x6e\xe1\x7c\x86\x9d\xb4\x8a\x67\x02\x4f\xdf\x3a\xe3\x49\x63\xf9\x6a\x97\xc7\x8b\x95\xae\x3c\x31\xaf\x3e\x2e\xc6\x9a\x24\x3d\xcc\x92\x1e\x6e\x4a\x4a\x2f\x0d\xb7\x5d\x80\xf0\xa3\xa5\x02\xaf\xb2\x96\x81\x4c\x13\x23\xb0\x6a\x68\x32\x23\xda\x9d\xc0\xac\x76\xa9\x7b\xa5\x57\x9b\x7e\x11\xc0\xea\xf8\xff\xf3\xf8\x40\xa7\x67\x9d\x07\xd3\x69\xcc\x23\x81\x7f\x98\x87\xe5\xaf\xe2\xac\xd1\x58\xfe\xa1\xe8\x76\x5e\xb7\x2c\x68\x74\xe6\xea\x5a\x28\x64\xf7\xbf\x9b\xbf\xea\x42\x70\x3c\xfe\xcf\xc4\x1a\x27\x2b\xa4\xab\x1a\x13\x2e\x46\x54\x81\xa1\x0a\x9c\x9d\x94\x67\xc3\x07\x2c\x2f\x71\xbe\x3d\x2a\x8e\xfb\x25\x06\xb9\xcb\xc7\x6e\x7f\xeb\xc0\x2e\x8f\xe3\x94\x9b\x61\x00\x62\x1d\x57\xd4\x66\xb1\xb7\x9e\xe4\xb2\xb5\x86\x01\x24\xa8\x60\xf6\xef\x3e\xbf\x7f\x84\x17\x23\xfe\xf2\xe9\x11\x30\xd7\x4a\x8e\x95\x53\x5e\xe7\x4a\x84\x82\xe4\x3d\xb1\x76\x5e\xf2\x69\x19\x39\x9f\x3f\x2d\x0e\xdb\xc6\xf0\x36\x76\xae\x95\x15\x7a\x19\x09\x2e\xec\xbf\x02\x00\x00\xff\xff\x89\x98\xf6\x69\x34\x05\x00\x00"

func templatesViewsPasswordHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsPasswordHtml,
		"templates/views/password.html",
	)
}

func templatesViewsPasswordHtml() (*asset, error) {
	bytes, err := templatesViewsPasswordHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/password.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsSystemHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6d\x6f\xdb\xbe\x11\x7f\xdf\x4f\xc1\xe9\x9f\x41\x36\xf0\xb7\xe4\xa4\x0f\x1b\xb4\x38\x43\xdb\x74\xc8\x80\x36\x0d\x12\xb7\x43\x5e\x05\xb4\x78\xb6\x99\x4a\xa4\x40\x9e\xec\x18\x86\xbf\xfb\x40\x51\x76\xf4\x64\xc7\x71\xd4\xa1\x18\xea\x57\x32\x75\x77\xfc\xdd\xef\xee\xf8\x70\x5a\x2e\x09\x83\x31\x17\x40\x9c\x84\x4e\xc0\x21\xab\xd5\x2b\x42\x08\x39\x1d\x4b\x15\x13\x25\x23\x18\x38\xe6\xd1\x21\x34\x44\x2e\xc5\xc0\xf9\x67\xfe\xa0\x17\x1a\x21\x76\x48\x0c\x38\x95\x6c\xe0\x24\x52\xa3\x43\x38\x1b\x38\x1a\x10\xb9\x98\x68\x87\x30\x8a\xb4\x87\x72\x32\x31\x66\x66\x34\xe2\x8c\xa2\x54\xce\x59\x36\x45\x36\x0d\xd2\x51\x04\x24\x8c\xa8\xd6\x03\xc7\xfe\x61\xd8\x53\xa0\x13\x29\x34\x9f\x01\x11\x72\xae\x68\xe2\x10\x8d\x0b\x63\x64\xce\x19\x4e\x83\xe3\x7e\xff\xaf\x05\x2b\xd6\xd2\x14\x28\xab\x8e\xa9\xf2\x40\x2e\xb8\x9e\x2f\x66\xbd\x50\x46\xbd\x63\xe7\x6c\xb9\x24\xfc\xf8\xef\x82\x38\x5f\x13\xe3\x9c\x43\x3c\xb2\x5a\x9d\xfa\x38\x6d\xd4\x7f\x14\xff\x4e\xa3\x14\xb6\x49\x9f\xfa\xd5\xf9\x8d\x4c\x03\xca\x91\x64\x8b\xf2\x98\x99\x60\x4c\x3c\xcb\xf1\x1d\x17\x63\xb9\x0e\xcc\x13\xbe\xb1\x47\x6c\x37\xa0\x38\x8d\x88\x48\xe3\x11\xa8\x0d\x46\xb6\x55\xab\x38\x9b\x67\x95\x2f\x65\xa3\x52\x83\x63\x4f\xa2\xf9\x96\x20\x8f\xe1\xb9\x30\xce\x61\xc6\x43\xb8\x4e\xc5\x90\xc7\x40\x56\x2b\xb2\xb1\x17\x73\x91\x22\xe8\x6d\x06\x0f\x81\x78\x23\xc7\x38\xa7\x0a\xc8\x0c\x94\x2e\x66\xc1\xbe\x9c\xc9\x31\xfe\x87\x2a\xf8\x6e\xd5\x5b\xc3\x75\x41\x15\x33\xb8\x9e\x8b\xc7\xe8\x19\x3c\xad\x03\x39\x94\xa0\x35\xa0\xb6\x09\xfa\x24\x42\xb5\x48\xf0\x50\x58\xb9\x7a\xdb\xa8\x3e\xa4\x3c\x62\x64\x9f\xac\xaf\x0d\x66\x2f\x74\xa8\x78\x82\x04\x17\x09\x0c\x1c\x9a\x24\x11\x0f\xa9\x59\x9c\xfc\x7b\x3a\xa3\xf6\xa5\x73\xc6\x64\x98\xc6\x20\xd0\x9b\x2b\x8e\xd0\x61\x14\x61\x28\x6f\x50\x71\x31\xe9\xb8\x55\x47\x33\x44\xa6\x92\xbc\x7f\x49\x15\x53\x24\xce\x49\xbf\xff\xae\xd7\x3f\xee\xf5\x4f\x86\xc7\x6f\x83\xfe\x9b\xa0\xff\xb6\xd7\xff\x5b\xd0\xef\x9b\x8d\xc0\xed\x76\x4f\x7d\x3b\x51\x03\xee\x96\x56\x05\x83\xf8\x97\x22\x29\x83\x44\x7f\x29\x96\xde\x47\x54\xc5\x84\x0b\x12\x4e\xa9\x10\x10\x3d\x37\xc1\x33\xfd\x7f\x8b\x8f\x56\xbb\xb5\x04\xb7\xb0\x64\x8a\x2f\xc2\xf5\x35\xc5\xb6\x81\x0d\x69\xf4\xe3\x05\x74\x19\xf5\xf6\xd9\xca\x40\xbd\x80\x2c\xa3\xff\x13\xb8\xfa\xce\x19\xc8\x17\x90\x95\xe9\xb7\xcf\x96\x85\xf5\x02\xba\x32\x03\x3f\x81\xaf\xf7\x29\xe3\x2f\xe1\x2b\xd3\x6f\x9f\xaf\x73\x3e\x39\x14\xd1\x39\x9f\xb4\x8d\xe6\xd3\x03\x2a\x7a\x28\x9e\x4c\xf9\x79\x88\x96\x4b\x02\x82\x99\x23\x72\xd3\x29\xda\xec\x2e\x77\x61\xaa\x14\x08\xdc\xf7\x18\x4d\x94\x9c\xeb\x84\x8a\x81\x73\x52\xb8\x1d\x0c\x0f\xde\xa7\x18\x9f\xad\x6f\x1d\xe6\xca\xf1\xa0\x7b\x6f\x9c\x66\xd1\x4c\x9c\x8b\x24\x5d\xef\x6a\x08\x0f\xe8\xac\x95\xcd\x5d\xac\x17\x4a\x81\x4a\x46\x0e\x11\x34\x36\x02\x3c\x86\x5e\xee\x9f\x43\x66\xe6\x4a\x32\x70\x0c\xab\x45\xc7\x4b\x9b\x99\xd7\x3f\xf6\xfa\x27\x24\xdf\xcc\xde\x99\x6d\xcc\x5e\xdd\xca\xa6\x14\x50\x26\x45\xb4\xf0\xb7\x38\xe5\x33\x3e\x6b\x79\xcf\x6b\x85\xbd\x82\x78\x46\x64\x6f\xa2\x64\x9a\xec\xd0\x38\x8c\xf3\x16\xb8\x76\xb6\x50\xbb\x01\x65\x72\xb0\xc1\x97\xde\x08\xc5\x13\xfe\x64\xea\xa3\x14\x51\x6e\x0c\x8c\x50\x90\x11\x8a\x9e\x29\x33\x27\xf7\xd4\x4a\x14\xa2\x2f\xe4\xbc\x90\xf1\x97\x72\xbe\x4e\x78\x2b\xf9\x04\x5e\xdf\x00\xde\x11\x9a\xe6\x94\xd9\xf1\x6a\xdf\xf2\x8f\x34\x3c\xff\x8a\xdc\x66\x3d\xbf\xfe\x9d\x91\xbf\x33\x72\xfd\x7b\xdc\x90\x2a\x72\xe5\x56\xcf\xa9\x9f\xb5\xbc\xec\xc0\xa9\x6f\xc2\x7a\x66\xb7\xb0\x75\x03\x08\xa5\xa2\x13\x28\x75\x80\x8a\xc9\xf4\x70\x87\x1c\x23\x28\x76\xd4\xa6\x27\x85\x8e\x86\x55\x5f\xf3\x35\x3d\x29\xc8\x15\x33\x38\x02\xaa\xc6\xfc\xc1\x39\x2b\xb8\x5c\x7c\x6c\xa5\x4b\x57\xed\xd0\xd5\xca\x73\x77\x67\xee\x8a\x2a\xac\x36\xb3\xaa\x0d\xb7\x62\x6b\xee\x1a\x62\xca\x05\xd1\x09\x0d\xb7\x77\xe8\x8a\x0a\x43\x89\x34\xda\x2e\x5f\x0e\x72\xad\x93\x57\xed\xe2\x2d\x97\x44\x51\x31\x01\x72\x94\xc7\x90\x04\x83\xe6\x78\xd6\x35\x12\xaa\x90\x9b\x5b\xac\xd1\x59\xeb\x7b\x57\x9b\xd1\x67\xac\x73\x25\xed\xcb\x8c\xbd\xa7\x0e\x63\xd3\x34\xa6\xe2\x6e\xb4\x40\xd0\x05\x28\x9e\xe5\xf3\xc6\xd0\xe3\x7d\xe3\x02\x5f\x9f\x1c\x68\x28\xe3\xf9\x49\x3b\xfb\xd4\x54\x7d\xa4\x54\x61\xa5\xea\xaa\x1c\x11\xf3\xfa\xca\x8f\xa8\xfa\x80\xda\xca\x4f\xa8\xfa\xff\xa2\xb8\x3e\x56\x8e\xea\x3b\xeb\x24\x63\x65\x1f\xc9\x0f\x1c\x15\xc5\xfd\x64\xaf\x21\x94\x8a\xb5\x5a\x78\x79\x70\xb3\xc2\xab\x06\x7a\x0b\x47\xb6\x66\x72\x61\x6f\x47\xbd\x54\x45\x33\x52\xf6\x92\xcc\x49\x29\x35\xb3\x47\x1c\xb5\xaf\x21\x94\x82\x39\xe4\x68\x97\x19\x3e\x7e\xb4\x64\x29\x23\xab\xd5\xc6\x8e\xca\x46\xb8\x98\x58\x2b\x9b\x9c\x2f\x9b\x2b\x13\x7a\x58\x11\x15\xca\xa9\xf0\x09\xc9\x44\x66\xf3\x09\x69\xb9\x24\x1a\x29\xf2\xf0\x62\xf8\xe5\x33\xe9\xd8\xe7\x6f\xd7\x9f\x89\xe3\x33\xaa\xa7\x23\x49\x15\xf3\xa9\xd6\x80\xda\x9f\x81\x60\x52\x69\x7f\x24\x25\x6a\x54\x34\xe9\x31\x8a\x90\xc5\x31\xe1\xe1\x0f\x50\x7e\xa8\xb5\x5f\x19\xf3\x62\x2e\xbc\x50\x6b\x87\x8c\x69\xa4\xa1\xbb\x1d\xd7\xbd\x7e\x11\xaa\x58\xc6\x20\xd0\xbf\x5f\x3f\x65\x13\xdf\x97\xe6\x6d\xdf\xe1\xfb\x66\x7f\xcb\xd3\xda\x10\xed\xd5\x04\xdd\x84\x77\x9c\x8a\xec\x0b\x1e\xd1\x80\xe6\x00\xdc\xc1\x2e\x59\x96\x72\xed\xc8\xa3\xf7\xf4\xa1\xb3\xac\x2d\xec\x66\x86\x80\xb8\x57\x5f\x6f\x86\xee\x9f\xb5\xb7\xa9\x8a\x02\x72\xd4\x71\xff\x58\x7f\x00\x74\xbb\x5e\xa2\x64\xd2\x71\xed\x27\x43\xb7\x5b\xd7\x61\x14\x69\x40\xea\x33\x65\xb3\xf1\x18\x02\x82\xb5\x77\xab\xba\x19\x9d\x86\x21\x68\x1d\x3c\x3a\xd7\x51\x55\xaf\xd6\x3f\x3e\x26\x1d\xe5\x29\xd0\x69\x84\x64\x30\x18\x10\x77\x4c\x79\x04\xcc\xdd\xa6\x60\x7e\x02\xe6\xe4\xea\x52\x22\x1f\x2f\x1a\x78\x29\xa3\xc6\xc8\x90\xf4\x49\x29\xa9\x1a\x58\x2a\xc9\xc2\x03\x06\x44\x79\x31\x68\x4d\x27\xf0\x84\xb0\x25\x1f\xf6\xb0\x3b\xe5\x0c\x02\x9b\x26\xbb\x05\xcd\x96\xc2\xc5\x24\x20\xee\x26\x11\x5f\xbb\x5b\x35\x56\xdd\x7f\x34\xbe\x5b\xd9\xeb\x97\x25\x36\xf7\x85\xfc\xc5\x30\x9b\x0a\x5b\x82\x6d\x93\x7b\x63\xe3\xfd\x13\xe8\xd5\x7b\x59\xfe\x5f\x13\x5c\xaf\x81\x57\xdb\xf4\x0a\x3d\xb0\xa3\xce\xfa\xcb\x47\xd7\x53\x40\xd9\xa2\xf3\x58\x1e\xb5\x9a\xef\xb8\x7f\x98\x82\x73\xbb\x5e\x65\xd9\x69\x08\x89\xe6\x62\x12\xc1\x39\x45\xb8\xca\x44\x02\x82\x2a\x6d\x60\xc2\xac\x45\x8b\x0f\xd9\x2d\xed\xa3\x39\x7b\x80\x36\x44\xa0\xe8\x6d\x67\x39\x92\x21\x35\x21\x6e\xce\x83\x71\x76\x8d\x0d\x88\x7b\x7b\x7b\x7b\xeb\x7d\xf9\xe2\x9d\x9f\x93\x8b\x8b\x20\x8e\x03\xad\xeb\xb4\x56\x48\xfa\x73\xb3\x3a\x98\xb5\x59\xd5\x96\xbd\xcc\xb3\x7c\x4d\xb4\x0b\x7d\x2e\xe7\xd9\x69\x3b\x8d\xb3\x76\xbb\xb5\x50\x34\x12\x6b\xae\xb1\x6e\xd7\x0b\x23\x1e\xfe\xd8\x11\x87\x22\x08\x37\x53\xa9\x98\x7f\x55\x9c\x89\xd8\x1b\x6e\xfe\xf5\x69\xb3\xf9\xfd\x37\x00\x00\xff\xff\xba\xc0\xd1\x68\xd6\x21\x00\x00"

func templatesViewsSystemHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsSystemHtml,
		"templates/views/system.html",
	)
}

func templatesViewsSystemHtml() (*asset, error) {
	bytes, err := templatesViewsSystemHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/system.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsUserHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x5d\x6b\xe3\x38\x14\x7d\xef\xaf\xb8\x88\x3e\xec\x2e\x38\xa6\x2d\x94\x65\x49\x02\x4b\x1f\x76\x07\xda\x61\x18\xa6\xcf\x83\x62\x5d\x27\xea\xc8\x92\x2b\xc9\x69\x3b\xc6\xff\x7d\x90\xe4\x0f\xc5\x71\x86\xb6\x93\x32\x7d\xbb\x8a\xa4\x73\xee\xbd\xe7\x48\x91\xeb\x1a\x18\xe6\x5c\x22\x90\x92\xae\x91\x40\xd3\x9c\x00\x00\xcc\x73\xa5\x0b\xc8\x04\x35\x66\x41\x5c\x9c\x6c\x94\xe6\xdf\x95\xb4\x54\x80\x1f\x0b\xba\x42\x91\x08\xcc\x2d\x01\xad\x04\x86\x65\x04\x0a\xb4\x1b\xc5\x16\xa4\x54\xc6\x12\xe0\x6c\x41\x0c\xdd\x62\x52\x19\xd4\x04\xa4\xda\x52\xc1\x19\xb5\xb8\xf4\x34\x9e\x8a\xf1\x6d\xc7\xc4\x2d\x16\x01\x7e\xad\x55\x55\x92\x61\x95\x5f\xe9\x39\xdd\xfc\x82\x48\x5a\x20\xe9\xb6\x65\x4a\x5a\xad\x44\xc8\x09\x32\x25\x92\x82\x25\x17\x3e\x30\x45\x1b\x3c\x9a\xe4\xec\x7c\x04\x58\xd7\xc0\xcf\xfe\x96\x40\x3e\x7a\xb4\x19\x34\x0d\xcc\x4d\x49\x65\x07\xac\xf1\xbe\xe2\x1a\x19\x59\xfe\x35\x4f\xdd\xc4\x28\xa1\xd4\x33\x8e\x7e\x8c\xea\x69\x53\xb9\xec\x52\xb9\x3c\x98\x8a\xdf\xc9\x65\x59\x59\xb0\x4f\x25\x2e\x88\xc5\x47\x4b\x76\x14\x68\xab\x24\xe0\x6a\xef\x3a\xe0\x1a\x1c\xa2\x2e\xd7\x28\x6b\xd8\x52\x51\xe1\x82\xd4\x35\xcc\x9c\x00\x33\x57\x27\x34\xcd\xb8\xaf\x29\xe3\xdb\x48\x90\xd1\xf0\x55\xfa\x14\x58\xa8\xe3\xe9\x73\xe3\xd1\x66\x9d\x3b\xdf\x45\xff\x43\x85\xae\xff\x21\x1a\xf7\xda\xe5\xfc\xd2\x5e\xbb\x82\x73\xc0\xfb\x00\xe1\x78\x80\x90\xb8\xea\xd7\x89\x51\x52\x63\x1e\x94\x66\xc7\x13\xe4\x53\x8f\xf8\xae\x0e\xcd\x5e\xa1\x53\xc2\x0d\x8b\x9c\x78\xc3\xe8\x39\x07\xa8\xab\xfb\x15\xc2\xa2\x64\xbf\xae\x64\x98\x3f\x9a\x8c\xff\x05\xb8\xdf\xae\xa1\x41\x81\x99\xf5\x7a\xb4\x15\x06\xa9\x76\xcb\x8d\xc5\x84\xb0\xe5\x7c\x52\xb6\x7d\x86\xba\x06\x4d\xe5\x1a\xe1\xd4\x43\xc2\x3f\x0b\x98\xf9\xc8\x8c\xef\x94\x3e\x27\x55\x5a\xae\x64\xe4\x80\xb0\xb5\xbf\x43\xfb\xb3\x1a\xff\x7e\x1a\x6c\xe2\xfb\x0a\x4d\x13\x92\x74\xb9\x75\x11\xe9\x9d\xb0\xdc\x83\x9c\xa7\x81\x73\x32\xfd\x91\x7d\x06\x25\x02\xf2\xdb\xdf\xe8\x47\xb6\xde\xbf\x95\x75\x4f\x0a\xfb\xf4\xf6\xf7\xfa\x20\x3e\xed\x48\xbd\x01\xba\x11\xc7\xc3\x2e\x88\x49\x37\x98\x7d\x5b\xa9\xc7\x09\x86\xdd\x7e\x1d\x9e\x87\xf1\x85\xd5\x63\xf6\x1e\x17\xd4\x76\xee\x8f\xf2\x8b\x6f\xa2\xa1\x8a\xde\x8b\xed\x1f\x47\x34\xf3\xc1\x5c\x39\x68\x74\xa6\x81\x2c\x84\x2d\xdd\x8e\x09\x61\x12\xf0\x70\x81\x53\xca\x0c\x93\x3b\x36\x8b\xda\x3f\x61\xde\xe7\x5b\x54\xc8\xaf\x46\x09\xce\xc8\xf2\x27\x8b\x0e\x5b\xf8\x90\x6d\x0a\x96\xa8\x3c\x37\x68\x93\x8b\x09\x8f\xe6\x20\xf1\xe0\xbf\x70\x8f\xbd\xaa\xac\x55\x32\xbc\x72\x51\x32\xd2\xaa\x6a\xaa\x55\xc1\x87\xd7\xc3\xca\x4a\x58\x59\x99\x3c\x50\x2d\xb9\x5c\x93\x65\x7f\x08\x6e\x4b\xf7\x16\x0e\x27\x60\x9e\x06\xb4\xbd\x5c\x50\x98\x49\x4d\x5e\xc8\x6e\xaa\x2c\x43\x63\x22\xf6\x2b\x8d\xcf\x60\x7f\x89\x74\xf3\xd4\xe9\xb0\x3c\x19\xf6\x9d\x44\x5f\x18\x77\xa6\xef\x62\x5d\x83\xb1\xd4\xf2\xec\xff\x2f\x37\xd7\xf0\x47\x88\x6f\x3f\x5f\x03\x49\x19\x35\x9b\x95\xa2\x9a\xa5\xd4\x18\xb4\x26\xdd\xa2\x64\x4a\x9b\xb4\xfd\x74\x50\x3a\xbd\x8b\x06\xb3\x82\xcb\x99\x43\xce\xa9\x30\xf8\xa7\x23\xe8\xd9\x7f\x04\x00\x00\xff\xff\x9a\xf9\x22\x72\xde\x0c\x00\x00"

func templatesViewsUserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsUserHtml,
		"templates/views/user.html",
	)
}

func templatesViewsUserHtml() (*asset, error) {
	bytes, err := templatesViewsUserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/user.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesWidgetMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xdf\x4b\xe4\x56\x14\xfe\x62\x6c\x6b\xa7\x3f\x68\xa5\x0f\xa5\xf4\xe1\xf6\x41\x69\x1f\x62\x27\xb6\x05\x89\x46\x4b\xad\x42\xa9\xd3\x8a\x1d\x85\x3e\x86\x99\x6b\x4c\x3b\x93\x0c\xb9\x89\x55\xb0\x74\x1c\xa5\xb6\x20\x2d\x08\xcb\xc2\x2e\xec\x32\x3e\xef\xc2\xec\xca\x60\xf0\x47\xfc\x17\xce\x7d\xda\xb7\x85\x7d\xdb\x87\xfd\x23\x96\x9b\x64\x5c\x16\x16\xf6\x42\x72\xbf\x73\xce\x77\xbe\xf3\x9d\x90\xc7\xa3\xc3\x37\x00\xe0\x3d\x00\x9f\x02\xd8\x07\xf0\x21\x80\x67\xc8\x4f\x59\x03\x46\x01\x98\x1a\xf0\x11\x80\xef\x35\xe0\x1d\x00\xbf\x6a\xc0\x30\x00\xae\x01\x6f\x01\xf8\x4d\x03\x74\x00\xa1\x06\xbc\x09\x60\xb3\xa8\xff\x59\xdc\x9d\xe2\x3e\xd0\x80\x37\x00\x1c\x6a\xc0\xfb\x00\x8e\x34\x60\x4e\x03\xba\x1a\x30\x05\xe0\xc9\x10\xf0\x0d\x80\x4f\x74\x60\x0c\xc0\xb2\x0e\x8c\x28\x3d\x3d\xf7\xf1\x97\x5e\xf4\xe9\x40\x09\x40\xb7\xb8\xef\xe9\xf9\xdc\x53\x1d\xf8\x18\x40\xaa\x03\x1f\x00\x78\x54\xe4\x9f\xea\x80\x86\xdc\x83\x3a\x6a\x87\x91\x02\xab\xfa\xbb\x05\x56\x5a\x6a\x1f\xbd\x88\x87\x90\xfb\x55\xdf\xe7\x6d\x95\x98\x0f\xfc\x75\xcf\x65\x82\x47\x4c\xc4\xb5\x1a\x17\x02\x0b\x5b\xad\x20\x8c\x58\x2d\xab\xc4\xa1\x13\x79\x81\x3f\x48\x36\x02\x57\x60\x49\xbd\x2a\x5c\x08\xc7\xe5\xf8\x29\xf8\x03\x3f\xb7\x32\x4e\xd5\x6b\x72\x54\xb7\x5b\x1c\xab\x82\x87\x58\x73\x1a\x31\x07\x75\x29\x91\xbb\xb2\x43\x7d\xba\xa0\x1e\x56\xb8\xd2\x31\x2a\xc2\xf5\xea\xc6\x77\xb1\x2b\x8c\x6a\x60\xb1\x3a\xdf\xfc\xf6\x77\x6f\xc3\x69\x06\x13\x61\x5c\x5a\x72\x44\x64\x54\x43\xc7\x17\x0d\x27\x0a\x42\x8b\xfd\x98\x95\x58\x25\x0e\x9d\x66\x50\x0f\xd8\xcc\x4b\xfc\xd9\xd2\x92\xe3\xbb\xb1\xe3\x72\xa3\xca\x9d\xa6\xc5\xae\x63\x8b\xad\xc4\x42\x78\x8e\x5f\xaa\xfc\x50\x59\x30\xd6\x78\x28\xbc\xc0\xb7\x98\x39\x51\x2e\xcd\x07\x7e\xc4\xfd\xc8\x50\x7e\x2d\x16\xf1\xad\xe8\xcb\x56\xc3\xf1\xfc\x69\x56\xdb\x70\x42\xc1\x23\x7b\xb5\xba\x68\x4c\xbd\xe0\x29\x3f\xeb\x3c\x34\x16\xfc\x5a\x50\xf7\x7c\xd7\x62\xa5\xe5\x46\x1c\x3a\x0d\x63\x31\x08\x9b\xc2\x62\x7e\x2b\x0b\x85\xfd\xd5\x34\xcb\xa1\xed\x8f\x99\x65\xdb\x36\xd9\xf8\x38\x53\xb0\xfc\x99\x6d\x9a\x6c\x8e\x95\x99\x95\xc5\xb3\xf6\xe4\xa0\x34\x63\x7f\xad\xe0\xe7\x19\x6d\xc6\x2c\xb3\x9d\x9d\xbc\x65\xd6\x9e\x2c\x7f\xc1\xe6\x98\xc9\x2c\x36\x39\x0d\xba\x45\x29\x5d\xca\x7d\x4a\xe8\x44\xee\xc9\x36\xf5\xe4\xdf\x94\xc8\xff\x99\xdc\x93\xbb\x74\x45\x7d\xf9\x0f\x5d\x52\xca\x28\xa1\x53\xba\xa0\x3e\x5d\x66\x4f\x0f\x74\x9f\xce\x32\x46\x2a\xdb\xb2\x43\x89\x6c\x53\x4a\x0f\xa9\x27\x3b\xf2\x90\xd1\xd9\x2b\x55\xff\x7b\x4d\xd7\x39\xa5\x74\x42\x09\xe8\xf6\x00\x74\x29\xa5\x94\x1e\xc8\x7f\xb3\xa9\x09\xf5\x41\xc7\xd4\xa7\x33\xb9\x97\xa5\xfa\xa0\x3b\x74\x95\x3b\x06\x1d\xc9\xb6\xfa\x2b\x14\x3c\xa6\x84\xae\x40\x77\x29\xa5\x73\x79\x48\xa7\x83\x29\xd4\x57\x31\xe8\xa6\xda\x41\x1e\x5c\xab\xfe\xb2\x2d\x22\xde\xc4\xf3\x00\x00\x00\xff\xff\xb6\x0e\x85\xf6\xef\x03\x00\x00"

func localesRuLc_messagesWidgetMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesWidgetMo,
		"locales/ru/LC_MESSAGES/widget.mo",
	)
}

func localesRuLc_messagesWidgetMo() (*asset, error) {
	bytes, err := localesRuLc_messagesWidgetMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/widget.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/layouts/widget.html":    templatesLayoutsWidgetHtml,
	"templates/views/accounts.html":    templatesViewsAccountsHtml,
	"templates/views/default.html":     templatesViewsDefaultHtml,
	"templates/views/files.html":       templatesViewsFilesHtml,
	"templates/views/group.html":       templatesViewsGroupHtml,
	"templates/views/logs.html":        templatesViewsLogsHtml,
	"templates/views/password.html":    templatesViewsPasswordHtml,
	"templates/views/system.html":      templatesViewsSystemHtml,
	"templates/views/user.html":        templatesViewsUserHtml,
	"locales/ru/LC_MESSAGES/widget.mo": localesRuLc_messagesWidgetMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"widget.mo": &bintree{localesRuLc_messagesWidgetMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"layouts": &bintree{nil, map[string]*bintree{
			"widget.html": &bintree{templatesLayoutsWidgetHtml, map[string]*bintree{}},
		}},
		"views": &bintree{nil, map[string]*bintree{
			"accounts.html": &bintree{templatesViewsAccountsHtml, map[string]*bintree{}},
			"default.html":  &bintree{templatesViewsDefaultHtml, map[string]*bintree{}},
			"files.html":    &bintree{templatesViewsFilesHtml, map[string]*bintree{}},
			"group.html":    &bintree{templatesViewsGroupHtml, map[string]*bintree{}},
			"logs.html":     &bintree{templatesViewsLogsHtml, map[string]*bintree{}},
			"password.html": &bintree{templatesViewsPasswordHtml, map[string]*bintree{}},
			"system.html":   &bintree{templatesViewsSystemHtml, map[string]*bintree{}},
			"user.html":     &bintree{templatesViewsUserHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
